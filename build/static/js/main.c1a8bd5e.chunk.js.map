{"version":3,"sources":["actions/findResultsAction.tsx","components/MyList/MyList.styles.tsx","components/Product/Product.styles.tsx","react-app-env.d.ts","apiService.tsx","actions/myListAction.tsx","components/Product/Product.tsx","components/MyList/MyList.tsx","components/SearchBar/SearchBar.styles.tsx","components/SearchBar/SearchBar.tsx","components/ProductList/ProductList.styles.tsx","components/Paginator/Paginator.tsx","components/ProductList/ProductList.tsx","components/Pages/Home.tsx","reducers/searchResultsReducer.tsx","reducers/myProductListReducer.tsx","store.tsx","index.tsx","components/Pages/MyGifts.tsx"],"names":["myFindResultsActionTypes","useStyles","makeStyles","container","padding","display","gridRowGap","gridColumnGap","gridTemplateColumns","justifyContent","card","maxWidth","height","media","width","margin","notOverflow","whiteSpace","textOverflow","overflow","url","apiRequest","text","dispatch","type","fetchResultsPending","fetch","then","res","json","error","payload","results","fetchResultsSuccess","catch","fetchResultsError","MyListActionTypes","Product","props","React","useState","open","setOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","classes","seller","setSeller","useEffect","id","product","handleClose","Card","className","CardActionArea","onClick","CardMedia","image","thumbnail","CardContent","Typography","title","variant","color","component","price","nickname","CardActions","Button","size","event","actionFunction","addOrRemove","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","permalink","DialogActions","autoFocus","MyList","productsList","useDispatch","products","useSelector","store","myProductListReducer","result","deleteItem","prod","removeFromMyList","length","map","item","index","key","createStyles","root","justifyItems","button","textAlign","fontFamily","fontSize","toolbar","flexDirection","sectionDesktop","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","spacing","searchIcon","pointerEvents","alignItems","inputRoot","inputInput","transition","transitions","create","SearchBar","newText","onChangeText","history","useHistory","counter","AppBar","Toolbar","IconButton","Link","to","Badge","badgeContent","showZero","disableElevation","InputBase","placeholder","onChange","target","value","onKeyPress","push","input","inputProps","Paginator","pageNumbers","i","Math","ceil","totalPosts","postsPerPage","number","paginate","ProductList","productsFromAPI","reducerResults","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPost","slice","addItem","addToMyList","Home","defaultState","pending","state","action","reducer","combineReducers","produce","draft","find","filter","createStore","composeWithDevTools","applyMiddleware","thunk","Root","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1a8bd5e.chunk.js","sourcesContent":["import IProduct from \"../models/ProductModel\";\n\nexport enum myFindResultsActionTypes {\n  fetchResultsPending = \"fetchResultsPending\",\n  fetchResultsSuccess = \"fetchResultsSuccess\",\n  fetchResultsError = \"fetchResultsError\"\n}\n\ninterface fetchResultsPendingAction {\n  type: myFindResultsActionTypes.fetchResultsPending;\n}\n\ninterface fetchResultsSuccessAction {\n  type: myFindResultsActionTypes.fetchResultsSuccess;\n  payload: IProduct[];\n}\n\ninterface fetchResultsErrorAction {\n  type: myFindResultsActionTypes.fetchResultsError;\n  payload: any;\n}\nexport function fetchResultsPending(): fetchResultsPendingAction {\n  return {\n    type: myFindResultsActionTypes.fetchResultsPending\n  };\n}\n\nexport function fetchResultsSuccess(\n  payload: IProduct[]\n): fetchResultsSuccessAction {\n  return {\n    type: myFindResultsActionTypes.fetchResultsSuccess,\n    payload\n  };\n}\n\nexport function fetchResultsError(payload: any): fetchResultsErrorAction {\n  return {\n    type: myFindResultsActionTypes.fetchResultsError,\n    payload\n  };\n}\nexport type fetchResultsActionTypes =\n  | fetchResultsPendingAction\n  | fetchResultsSuccessAction\n  | fetchResultsErrorAction;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  container: {\n    padding: '10px 50px',\n    display: 'grid',\n    gridRowGap: '20px',\n    gridColumnGap: '20px',\n    gridTemplateColumns: 'repeat(auto-fit, 224px)',\n    justifyContent: 'center'\n  }\n});\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  card: {\n    maxWidth: 224,\n    height: 300\n  },\n  media: {\n    height: \"120px\",\n    width: \"90px\",\n    margin: \"auto\"\n  },\n  notOverflow: {\n    width: \"100%\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  }\n});\n","/// <reference types=\"react-scripts\" />\n\nexport const url = 'https://api.mercadolibre.com/sites/MCO/';\n","import { url } from \"./react-app-env.d\";\nimport {\n  fetchResultsSuccess,\n  fetchResultsError,\n  fetchResultsPending\n} from \"./actions/findResultsAction\";\nimport { Dispatch } from \"redux\";\nimport IProduct from \"./models/ProductModel\";\n\nexport function apiRequest(text: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchResultsPending());\n    fetch(`${url}search?q=${text}`)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          throw res.error;\n        }\n\n        dispatch(fetchResultsSuccess(res.results as IProduct[]));\n      })\n      .catch(error => {\n        dispatch(fetchResultsError(error));\n      });\n  };\n}\nexport function apiSellerOnly(id: number) {\n  return fetch(`${url}search?seller_id=${id}`);\n}\n","import IProduct from '../models/ProductModel';\n\nexport enum MyListActionTypes {\n  addToMyList = 'addToMyList',\n  removeFromMyList = 'removeFromMyList'\n}\ninterface AddToMyListAction {\n  type: MyListActionTypes.addToMyList;\n  payload: IProduct;\n}\n\ninterface RemoveFromMyListAction {\n  type: MyListActionTypes.removeFromMyList;\n  payload: IProduct;\n}\nexport function AddToMyList(payload: IProduct): AddToMyListAction {\n  return { type: MyListActionTypes.addToMyList, payload };\n}\n\nexport function RemoveFromMyList(payload: IProduct): RemoveFromMyListAction {\n  return { type: MyListActionTypes.removeFromMyList, payload };\n}\n\nexport type myListActions = AddToMyListAction | RemoveFromMyListAction;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useStyles } from \"./Product.styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IProduct from \"../../models/ProductModel\";\nimport ISeller from \"../../models/SellerModel\";\nimport { apiSellerOnly } from \"../../apiService\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport default function Product(props: {\n  product: IProduct;\n  addOrRemove: string;\n  actionFunction: (prod: IProduct) => void;\n}) {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const classes = useStyles();\n  const [seller, setSeller] = useState({} as ISeller);\n  useEffect(() => {\n    apiSellerOnly(props.product.seller.id)\n      .then(res => res.json())\n      .then(res => {\n        if (res.seller) {\n          setSeller(res.seller);\n        }\n      });\n  }, [props.product.seller.id]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card className={classes.card}>\n        <CardActionArea onClick={handleClickOpen}>\n          <CardMedia\n            className={classes.media}\n            image={props.product.thumbnail}\n          />\n          <CardContent>\n            <Typography className={classes.notOverflow}>\n              {props.product.title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              $ {props.product.price}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {seller.nickname}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button\n            size=\"large\"\n            color=\"primary\"\n            onClick={event => {\n              props.actionFunction(props.product);\n            }}\n          >\n            {props.addOrRemove}\n          </Button>\n        </CardActions>\n      </Card>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {props.product.title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>{props.product.permalink}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Cerrar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { RootState } from \"../../store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useStyles } from \"./MyList.styles\";\nimport Product from \"../Product/Product\";\nimport { RemoveFromMyList } from \"../../actions/myListAction\";\nimport IProduct from \"../../models/ProductModel\";\n\nexport default function MyList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const products = useSelector(\n    (store: RootState) => store.myProductListReducer.result\n  );\n  function deleteItem(prod: IProduct) {\n    dispatch(RemoveFromMyList(prod));\n  }\n\n  let productsList: JSX.Element[] | JSX.Element;\n  if (products && products.length > 0) {\n    productsList = products.map((item, index) => (\n      <Product\n        key={index}\n        product={item}\n        addOrRemove=\"Remove from your gift list\"\n        actionFunction={deleteItem}\n      />\n    ));\n  } else {\n    productsList = <div>You add no products</div>;\n  }\n  return <div className={classes.container}>{productsList}</div>;\n}\n","import {\n  createStyles,\n  fade,\n  Theme,\n  makeStyles\n} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      justifyItems: \"center\"\n    },\n    button: {\n      textAlign: \"center\",\n      color: \"white\",\n      display: \"flex\",\n      margin: \"auto\",\n      fontFamily: \"fantasy,\",\n      fontSize: \"larger\"\n    },\n    toolbar: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      margin: \"initial\"\n    },\n    title: { padding: \"0 20px\", color: \"black\" },\n    sectionDesktop: {\n      display: \"flex\",\n      margin: \"auto\",\n      [theme.breakpoints.up(\"md\")]: {}\n    },\n\n    search: {\n      position: \"sticky\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      },\n      margin: \"auto\"\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: 120,\n        \"&:focus\": {\n          width: 200\n        }\n      }\n    }\n  })\n);\n","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useStyles } from './SearchBar.styles';\nimport { apiRequest } from '../../apiService';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport RedeemIcon from '@material-ui/icons/Redeem';\nimport Badge from '@material-ui/core/Badge';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport { RootState } from '../../store';\n\nfunction SearchBar() {\n  const [newText, onChangeText] = useState('');\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const counter = useSelector(\n    (store: RootState) => store.myProductListReducer.result.length\n  );\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' color='secondary'>\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.sectionDesktop}>\n            <IconButton component={Link} to='/home' color='inherit'>\n              <AccountBalanceIcon />\n            </IconButton>\n            <IconButton component={Link} to='/gifts' color='inherit'>\n              <Badge badgeContent={counter} showZero={true}>\n                <RedeemIcon />\n              </Badge>\n            </IconButton>\n          </div>\n\n          <Button\n            component={Link}\n            to='/gifts'\n            disableElevation\n            className={classes.button}\n          >\n            My gifts\n          </Button>\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder='Search…'\n              onChange={event => {\n                const newText = event.target.value;\n                onChangeText(newText);\n                dispatch(apiRequest(newText));\n              }}\n              onKeyPress={event => {\n                if (event.key === 'Enter' && newText) {\n                  onChangeText(newText);\n                  dispatch(apiRequest(newText));\n                  history.push('/home');\n                }\n              }}\n              classes={{\n                input: classes.inputInput\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nexport default SearchBar;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  container: {\n    padding: '10px 50px',\n    display: 'grid',\n    gridRowGap: '20px',\n    gridColumnGap: '20px',\n    gridTemplateColumns: 'repeat(auto-fit, 224px)',\n    justifyContent: 'center'\n  }\n});\n","import React from \"react\";\r\n\r\nconst Paginator = (props: {\r\n  postsPerPage: number;\r\n  totalPosts: number;\r\n  paginate: any;\r\n}) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(props.totalPosts / props.postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <div>\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className=\"page-item\">\r\n            <button onClick={() => props.paginate(number)}>{number}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Paginator;\r\n","import React, { useState } from \"react\";\nimport Product from \"../Product/Product\";\nimport { RootState } from \"../../store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useStyles } from \"./ProductList.styles\";\nimport { AddToMyList } from \"../../actions/myListAction\";\nimport IProduct from \"../../models/ProductModel\";\nimport Paginator from \"../Paginator/Paginator\";\n\nexport default function ProductList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const products = useSelector(\n    (store: RootState) => store.reducerResults.result\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const paginate = (pageNumbers: number) => setCurrentPage(pageNumbers);\n  const currentPost = products\n    ? products.slice(indexOfFirstPost, indexOfLastPost)\n    : null;\n\n  function addItem(prod: IProduct) {\n    dispatch(AddToMyList(prod));\n  }\n\n  let productsFromAPI;\n  if (products && products.length > 0) {\n    productsFromAPI = currentPost?.map((item, index) => (\n      <Product\n        key={index}\n        product={item}\n        addOrRemove=\"Add to your gift list\"\n        actionFunction={addItem}\n      />\n    ));\n  } else {\n    productsFromAPI = <div>Search products you wish</div>;\n  }\n\n  return (\n    <div>\n      <div>\n        <Paginator\n          postsPerPage={postsPerPage}\n          totalPosts={products ? products.length : 0}\n          paginate={paginate}\n        />\n      </div>\n      <div className={classes.container}>{productsFromAPI} </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport ProductList from \"../ProductList/ProductList\";\n\nexport default function Home() {\n  return (\n    <div>\n      <SearchBar />\n      <ProductList />\n    </div>\n  );\n}\n","import IProduct from \"../models/ProductModel\";\nimport {\n  fetchResultsActionTypes,\n  myFindResultsActionTypes\n} from \"../actions/findResultsAction\";\n\ninterface IResults {\n  pending: boolean;\n  result?: IProduct[] | null;\n  error?: any;\n}\n\nconst defaultState: IResults = {\n  pending: false,\n  result: null,\n  error: null\n};\n\nfunction reducerResults(\n  state: IResults = defaultState,\n  action: fetchResultsActionTypes\n): IResults {\n  switch (action.type) {\n    case myFindResultsActionTypes.fetchResultsPending: {\n      return { ...state, pending: true };\n    }\n\n    case myFindResultsActionTypes.fetchResultsSuccess: {\n      return { ...state, pending: false, result: action.payload };\n    }\n\n    case myFindResultsActionTypes.fetchResultsError: {\n      return { ...state, pending: false, error: action.payload };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducerResults;\n","import { MyListActionTypes, myListActions } from '../actions/myListAction';\nimport produce from 'immer';\nimport IProduct from '../models/ProductModel';\n\ninterface IMyList {\n  result: IProduct[];\n}\n\nconst defaultState: IMyList = {\n  result: []\n};\n\nexport function myProductListReducer(\n  state: IMyList = defaultState,\n  action: myListActions\n): IMyList {\n  switch (action.type) {\n    case MyListActionTypes.addToMyList: {\n      return produce(state, draft => {\n        if (!draft.result.find(prod => action.payload.id === prod.id)) {\n          draft.result.push({ ...action.payload });\n        }\n      });\n    }\n\n    case MyListActionTypes.removeFromMyList: {\n      return produce(state, draft => {\n        draft.result = draft.result.filter(\n          prod => action.payload.id !== prod.id\n        );\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport reducerResults from \"./reducers/searchResultsReducer\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { myProductListReducer } from \"./reducers/myProductListReducer\";\n\nconst reducer = combineReducers({\n  reducerResults,\n  myProductListReducer\n});\nexport type RootState = ReturnType<typeof reducer>;\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport MyGifts from './components/Pages/MyGifts';\nimport Home from './components/Pages/Home';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n// A function that routes the user to the right place\n// after login\n\nconst Root = (\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route path='/home' component={Home} />\n        <Route path='/gifts' component={MyGifts} />\n\n        <Route exact path='/' component={Home} />\n      </Switch>\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(Root, document.getElementById('root'));\n","import React from \"react\";\r\nimport MyList from \"../MyList/MyList\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\n\r\nexport default function List() {\r\n  return (\r\n    <div>\r\n      <SearchBar />\r\n      <MyList />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}