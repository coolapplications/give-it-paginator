{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/aalvarez/projects/give-it/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/aalvarez/projects/give-it/src/components/ProductList/ProductList.tsx\";\nimport React, { useState } from \"react\";\nimport Product from \"../Product/Product\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useStyles } from \"./ProductList.styles\";\nimport { AddToMyList } from \"../../actions/myListAction\";\nexport default function ProductList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const products = useSelector(store => store.reducerResults.result);\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentPage = _useState2[0],\n        setCurrentPage = _useState2[1];\n\n  const _useState3 = useState(10),\n        _useState4 = _slicedToArray(_useState3, 1),\n        postsPerPage = _useState4[0];\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = products.slice(indexOfFirstPost, indexOfLastPost);\n\n  function addItem(prod) {\n    dispatch(AddToMyList(prod));\n  }\n\n  let productsFromAPI;\n\n  if (products && products.length > 0) {\n    productsFromAPI = currentPosts.map((item, index) => React.createElement(Product, {\n      key: index,\n      product: item,\n      addOrRemove: \"Add to your gift list\",\n      actionFunction: addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  } else {\n    productsFromAPI = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Search products you wish\");\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, productsFromAPI);\n}","map":{"version":3,"sources":["/mnt/c/Users/aalvarez/projects/give-it/src/components/ProductList/ProductList.tsx"],"names":["React","useState","Product","useSelector","useDispatch","useStyles","AddToMyList","ProductList","classes","dispatch","products","store","reducerResults","result","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","addItem","prod","productsFromAPI","length","map","item","index","container"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAGA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGP,WAAW,CACzBQ,KAAD,IAAsBA,KAAK,CAACC,cAAN,CAAqBC,MADjB,CAA5B;;AAHoC,oBAOEZ,QAAQ,CAAC,CAAD,CAPV;AAAA;AAAA,QAO7Ba,WAP6B;AAAA,QAOhBC,cAPgB;;AAAA,qBAQbd,QAAQ,CAAC,EAAD,CARK;AAAA;AAAA,QAQ7Be,YAR6B;;AAUpC,QAAMC,eAAe,GAAGH,WAAW,GAAGE,YAAtC;AACA,QAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAA3C;AACA,QAAMG,YAAY,GAAGT,QAAQ,CAAEU,KAAV,CAAgBF,gBAAhB,EAAkCD,eAAlC,CAArB;;AAEA,WAASI,OAAT,CAAiBC,IAAjB,EAAiC;AAC/Bb,IAAAA,QAAQ,CAACH,WAAW,CAACgB,IAAD,CAAZ,CAAR;AACD;;AAED,MAAIC,eAAJ;;AACA,MAAIb,QAAQ,IAAIA,QAAQ,CAACc,MAAT,GAAkB,CAAlC,EAAqC;AACnCD,IAAAA,eAAe,GAAGJ,YAAY,CAACM,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KACjC,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,OAAO,EAAED,IAFX;AAGE,MAAA,WAAW,EAAC,uBAHd;AAIE,MAAA,cAAc,EAAEL,OAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB,CAAlB;AAQD,GATD,MASO;AACLE,IAAAA,eAAe,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAlB;AACD;;AAED,SAAO;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACoB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCL,eAApC,CAAP;AACD","sourcesContent":["import React, { useState } from \"react\";\nimport Product from \"../Product/Product\";\nimport { RootState } from \"../../store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useStyles } from \"./ProductList.styles\";\nimport { AddToMyList } from \"../../actions/myListAction\";\nimport IProduct from \"../../models/ProductModel\";\n\nexport default function ProductList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const products = useSelector(\n    (store: RootState) => store.reducerResults.result\n  );\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = products!.slice(indexOfFirstPost, indexOfLastPost);\n\n  function addItem(prod: IProduct) {\n    dispatch(AddToMyList(prod));\n  }\n\n  let productsFromAPI: JSX.Element[] | JSX.Element;\n  if (products && products.length > 0) {\n    productsFromAPI = currentPosts.map((item, index) => (\n      <Product\n        key={index}\n        product={item}\n        addOrRemove=\"Add to your gift list\"\n        actionFunction={addItem}\n      />\n    ));\n  } else {\n    productsFromAPI = <div>Search products you wish</div>;\n  }\n\n  return <div className={classes.container}>{productsFromAPI}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}