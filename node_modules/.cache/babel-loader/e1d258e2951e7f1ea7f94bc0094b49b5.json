{"ast":null,"code":"import{url}from\"./react-app-env.d\";import{fetchResultsSuccess,fetchResultsError,fetchResultsPending}from\"./actions/findResultsAction\";export function apiRequest(text){return function(dispatch){dispatch(fetchResultsPending());fetch(\"\".concat(url,\"search?q=\").concat(text)).then(function(res){return res.json();}).then(function(res){if(res.error){throw res.error;}dispatch(fetchResultsSuccess(res.results));}).catch(function(error){dispatch(fetchResultsError(error));});};}export function apiSellerOnly(id){return fetch(\"\".concat(url,\"search?seller_id=\").concat(id));}","map":{"version":3,"sources":["/Users/peliculas/mercado-andres/src/apiService.tsx"],"names":["url","fetchResultsSuccess","fetchResultsError","fetchResultsPending","apiRequest","text","dispatch","fetch","then","res","json","error","results","catch","apiSellerOnly","id"],"mappings":"AAAA,OAASA,GAAT,KAAoB,mBAApB,CACA,OACEC,mBADF,CAEEC,iBAFF,CAGEC,mBAHF,KAIO,6BAJP,CAQA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,IAApB,CAAkC,CACvC,MAAO,UAACC,QAAD,CAAwB,CAC7BA,QAAQ,CAACH,mBAAmB,EAApB,CAAR,CACAI,KAAK,WAAIP,GAAJ,qBAAmBK,IAAnB,EAAL,CACGG,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACX,GAAIA,GAAG,CAACE,KAAR,CAAe,CACb,KAAMF,CAAAA,GAAG,CAACE,KAAV,CACD,CAEDL,QAAQ,CAACL,mBAAmB,CAACQ,GAAG,CAACG,OAAL,CAApB,CAAR,CACD,CARH,EASGC,KATH,CASS,SAAAF,KAAK,CAAI,CACdL,QAAQ,CAACJ,iBAAiB,CAACS,KAAD,CAAlB,CAAR,CACD,CAXH,EAYD,CAdD,CAeD,CACD,MAAO,SAASG,CAAAA,aAAT,CAAuBC,EAAvB,CAAmC,CACxC,MAAOR,CAAAA,KAAK,WAAIP,GAAJ,6BAA2Be,EAA3B,EAAZ,CACD","sourcesContent":["import { url } from \"./react-app-env.d\";\nimport {\n  fetchResultsSuccess,\n  fetchResultsError,\n  fetchResultsPending\n} from \"./actions/findResultsAction\";\nimport { Dispatch } from \"redux\";\nimport IProduct from \"./models/ProductModel\";\n\nexport function apiRequest(text: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchResultsPending());\n    fetch(`${url}search?q=${text}`)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          throw res.error;\n        }\n\n        dispatch(fetchResultsSuccess(res.results as IProduct[]));\n      })\n      .catch(error => {\n        dispatch(fetchResultsError(error));\n      });\n  };\n}\nexport function apiSellerOnly(id: number) {\n  return fetch(`${url}search?seller_id=${id}`);\n}\n"]},"metadata":{},"sourceType":"module"}