{"ast":null,"code":"var _jsxFileName = \"/Users/peliculas/empresariales/give-it/src/store.tsx\";\nimport React from 'react';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport reducerResults from './reducers/results';\nimport thunk from 'redux-thunk';\nimport { createDevTools } from 'redux-devtools';\nimport LogMonitor from 'redux-devtools-log-monitor';\nimport DockMonitor from 'redux-devtools-dock-monitor';\nconst enhancer = compose(applyMiddleware(thunk), createDevTools(React.createElement(DockMonitor, {\n  toggleVisibilityKey: \"ctrl-h\",\n  changePositionKey: \"ctrl-q\",\n  defaultIsVisible: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(LogMonitor, {\n  theme: \"tomorrow\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}))).instrument());\nconst reducer = combineReducers({\n  reducerResults\n});\nconst store = createStore(reducer, enhancer);\nexport default store;","map":{"version":3,"sources":["/Users/peliculas/empresariales/give-it/src/store.tsx"],"names":["React","createStore","combineReducers","applyMiddleware","compose","reducerResults","thunk","createDevTools","LogMonitor","DockMonitor","enhancer","instrument","reducer","store"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,MAAMC,QAAQ,GAAGN,OAAO,CACtBD,eAAe,CAACG,KAAD,CADO,EAEtBC,cAAc,CACZ,oBAAC,WAAD;AACE,EAAA,mBAAmB,EAAC,QADtB;AAEE,EAAA,iBAAiB,EAAC,QAFpB;AAGE,EAAA,gBAAgB,EAAE,IAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADY,CAAd,CAQEI,UARF,EAFsB,CAAxB;AAYA,MAAMC,OAAO,GAAGV,eAAe,CAAC;AAC9BG,EAAAA;AAD8B,CAAD,CAA/B;AAIA,MAAMQ,KAAK,GAAGZ,WAAW,CAACW,OAAD,EAAUF,QAAV,CAAzB;AAEA,eAAeG,KAAf","sourcesContent":["import React from 'react';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport reducerResults from './reducers/results';\nimport thunk from 'redux-thunk';\nimport { createDevTools } from 'redux-devtools';\nimport LogMonitor from 'redux-devtools-log-monitor';\nimport DockMonitor from 'redux-devtools-dock-monitor';\n\nconst enhancer = compose(\n  applyMiddleware(thunk),\n  createDevTools(\n    <DockMonitor\n      toggleVisibilityKey='ctrl-h'\n      changePositionKey='ctrl-q'\n      defaultIsVisible={true}\n    >\n      <LogMonitor theme='tomorrow' />\n    </DockMonitor>\n  ).instrument()\n);\nconst reducer = combineReducers({\n  reducerResults\n});\nexport type RootState = ReturnType<typeof reducer>;\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}