{"ast":null,"code":"import _objectSpread from \"/Users/peliculas/empresariales/give-it/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { MyListActionTypes } from '../actions/myListAction';\nimport produce from 'immer';\nimport store from '../store';\nconst defaultState = {\n  result: []\n};\nexport function myProductListReducer(state = defaultState, action) {\n  switch (action.type) {\n    case MyListActionTypes.addToMyList:\n      {\n        return produce(state, draft => {\n          var _store$getState$reduc;\n\n          const foundProd = (_store$getState$reduc = store.getState().reducerResults.result) === null || _store$getState$reduc === void 0 ? void 0 : _store$getState$reduc.find(prod => prod.id === action.payload);\n\n          if (!foundProd) {\n            return state;\n          }\n\n          const prodCopy = _objectSpread({}, foundProd);\n\n          if (!draft.result.includes(prodCopy)) {\n            draft.result.push(prodCopy);\n          }\n        });\n      }\n\n    case MyListActionTypes.removeFromMyList:\n      {\n        return produce(state, draft => {\n          draft.result = draft.result.filter(prod => action.payload !== prod.id);\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/peliculas/empresariales/give-it/src/reducers/myProductListReducer.tsx"],"names":["MyListActionTypes","produce","store","defaultState","result","myProductListReducer","state","action","type","addToMyList","draft","foundProd","getState","reducerResults","find","prod","id","payload","prodCopy","includes","push","removeFromMyList","filter"],"mappings":";AAAA,SAASA,iBAAT,QAAiD,yBAAjD;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAMA,MAAMC,YAAqB,GAAG;AAC5BC,EAAAA,MAAM,EAAE;AADoB,CAA9B;AAIA,OAAO,SAASC,oBAAT,CACLC,KAAc,GAAGH,YADZ,EAELI,MAFK,EAGI;AACT,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,iBAAiB,CAACS,WAAvB;AAAoC;AAClC,eAAOR,OAAO,CAACK,KAAD,EAAQI,KAAK,IAAI;AAAA;;AAC7B,gBAAMC,SAAS,4BAAGT,KAAK,CACpBU,QADe,GAEfC,cAFe,CAEAT,MAFH,0DAAG,sBAEQU,IAFR,CAEaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACU,OAFxC,CAAlB;;AAIA,cAAI,CAACN,SAAL,EAAgB;AACd,mBAAOL,KAAP;AACD;;AAED,gBAAMY,QAAQ,qBAAQP,SAAR,CAAd;;AAEA,cAAI,CAACD,KAAK,CAACN,MAAN,CAAae,QAAb,CAAsBD,QAAtB,CAAL,EAAsC;AACpCR,YAAAA,KAAK,CAACN,MAAN,CAAagB,IAAb,CAAkBF,QAAlB;AACD;AACF,SAda,CAAd;AAeD;;AAED,SAAKlB,iBAAiB,CAACqB,gBAAvB;AAAyC;AACvC,eAAOpB,OAAO,CAACK,KAAD,EAAQI,KAAK,IAAI;AAC7BA,UAAAA,KAAK,CAACN,MAAN,GAAeM,KAAK,CAACN,MAAN,CAAakB,MAAb,CAAoBP,IAAI,IAAIR,MAAM,CAACU,OAAP,KAAmBF,IAAI,CAACC,EAApD,CAAf;AACD,SAFa,CAAd;AAGD;;AAED;AACE,aAAOV,KAAP;AA1BJ;AA4BD","sourcesContent":["import { MyListActionTypes, myListActions } from '../actions/myListAction';\nimport produce from 'immer';\nimport IProduct from '../models/ProductModel';\nimport store from '../store';\n\ninterface IMyList {\n  result: IProduct[];\n}\n\nconst defaultState: IMyList = {\n  result: []\n};\n\nexport function myProductListReducer(\n  state: IMyList = defaultState,\n  action: myListActions\n): IMyList {\n  switch (action.type) {\n    case MyListActionTypes.addToMyList: {\n      return produce(state, draft => {\n        const foundProd = store\n          .getState()\n          .reducerResults.result?.find(prod => prod.id === action.payload);\n\n        if (!foundProd) {\n          return state;\n        }\n\n        const prodCopy = { ...foundProd };\n\n        if (!draft.result.includes(prodCopy)) {\n          draft.result.push(prodCopy);\n        }\n      });\n    }\n\n    case MyListActionTypes.removeFromMyList: {\n      return produce(state, draft => {\n        draft.result = draft.result.filter(prod => action.payload !== prod.id);\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}