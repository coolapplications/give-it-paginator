{"ast":null,"code":"import _slicedToArray from \"/mnt/c/users/aalvarez/projects/give-it/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/users/aalvarez/projects/give-it/src/components/Product/Product.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useStyles } from \"./Product.styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { apiSellerOnly, storeSelectProduct } from \"../../apiService\";\nimport { useDispatch } from \"react-redux\";\nexport default function Product(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        item = _useState2[0],\n        addItem = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        seller = _useState4[0],\n        setSeller = _useState4[1];\n\n  useEffect(() => {\n    apiSellerOnly(props.product.seller.id).then(res => res.json()).then(res => {\n      if (res.seller) {\n        setSeller(res.seller);\n      }\n    });\n  }, [props.product.seller.id]);\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.product.thumbnail,\n    title: \"Contemplative Reptile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.notOverflow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.product.title), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.product.price), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, seller.nickname, props.product.id), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"large\",\n    color: \"primary\",\n    onKeyPress: event => {\n      addItem(props.product.itemId);\n      dispatch(storeSelectProduct(item));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Add to my list\")));\n}","map":{"version":3,"sources":["/mnt/c/users/aalvarez/projects/give-it/src/components/Product/Product.tsx"],"names":["React","useState","useEffect","useStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","apiSellerOnly","storeSelectProduct","useDispatch","Product","props","classes","dispatch","item","addItem","seller","setSeller","product","id","then","res","json","card","media","thumbnail","notOverflow","title","price","nickname","event","itemId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useStyles } from \"./Product.styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IProduct from \"../../models/ProductModel\";\nimport ISeller from \"../../models/SellerModel\";\nimport { apiSellerOnly, storeSelectProduct } from \"../../apiService\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Product(props: { product: IProduct }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [item, addItem] = useState(\"\");\n\n  const [seller, setSeller] = useState({} as ISeller);\n  useEffect(() => {\n    apiSellerOnly(props.product.seller.id)\n      .then(res => res.json())\n      .then(res => {\n        if (res.seller) {\n          setSeller(res.seller);\n        }\n      });\n  }, [props.product.seller.id]);\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.product.thumbnail}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography className={classes.notOverflow}>\n            {props.product.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.product.price}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {seller.nickname}\n            {props.product.id}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          ></Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          size=\"large\"\n          color=\"primary\"\n          onKeyPress={event => {\n            addItem(props.product.itemId);\n            dispatch(storeSelectProduct(item));\n          }}\n        >\n          Add to my list\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}