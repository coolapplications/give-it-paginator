{"ast":null,"code":"import _slicedToArray from \"/Users/peliculas/empresariales/give-it/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/peliculas/empresariales/give-it/src/components/Product/Product.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useStyles } from './Product.styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { apiSellerOnly } from '../../apiService';\nimport { useDispatch } from 'react-redux';\nimport { apiRequest } from '../../apiService';\nexport default function Product(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        productToList = _useState2[1];\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        seller = _useState4[0],\n        setSeller = _useState4[1];\n\n  useEffect(() => {\n    apiSellerOnly(props.product.seller.id).then(res => res.json()).then(res => {\n      if (res.seller) {\n        setSeller(res.seller);\n      }\n    });\n  });\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.product.thumbnail,\n    title: \"Contemplative Reptile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.notOverflow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.product.title), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.product.price), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, seller.nickname), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"large\",\n    color: \"primary\",\n    onKeyPress: event => {\n      productToList(index);\n      dispatch(apiRequest(index));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Add to my list\")));\n}","map":{"version":3,"sources":["/Users/peliculas/empresariales/give-it/src/components/Product/Product.tsx"],"names":["React","useState","useEffect","useStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","apiSellerOnly","useDispatch","apiRequest","Product","props","index","productToList","classes","dispatch","seller","setSeller","product","id","then","res","json","card","media","thumbnail","notOverflow","title","price","nickname","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { useStyles } from './Product.styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IProduct from '../../models/ProductModel';\nimport ISeller from '../../models/SellerModel';\nimport { apiSellerOnly } from '../../apiService';\nimport { useDispatch } from 'react-redux';\nimport { apiRequest } from '../../apiService';\n\nexport default function Product(props: { product: IProduct }) {\n  const [index, productToList] = useState('');\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [seller, setSeller] = useState({} as ISeller);\n  useEffect(() => {\n    apiSellerOnly(props.product.seller.id)\n      .then(res => res.json())\n      .then(res => {\n        if (res.seller) {\n          setSeller(res.seller);\n        }\n      });\n  });\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.product.thumbnail}\n          title='Contemplative Reptile'\n        />\n        <CardContent>\n          <Typography className={classes.notOverflow}>\n            {props.product.title}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {props.product.price}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {seller.nickname}\n          </Typography>\n          <Typography\n            variant='body2'\n            color='textSecondary'\n            component='p'\n          ></Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          size='large'\n          color='primary'\n          onKeyPress={event => {\n            productToList(index);\n            dispatch(apiRequest(index));\n          }}\n        >\n          Add to my list\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}