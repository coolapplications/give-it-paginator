{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reducerResults from './reducers/results';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst reducer = combineReducers({\n  reducerResults\n});\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/peliculas/empresariales/give-it/src/store.tsx"],"names":["createStore","combineReducers","applyMiddleware","reducerResults","thunk","composeWithDevTools","reducer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAAuE,OAAvE;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,OAAO,GAAGL,eAAe,CAAC;AAC9BE,EAAAA;AAD8B,CAAD,CAA/B;AAIA,MAAMI,KAAK,GAAGP,WAAW,CAACM,OAAD,EAAUD,mBAAmB,CAACH,eAAe,CAACE,KAAD,CAAhB,CAA7B,CAAzB;AAEA,eAAeG,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport reducerResults from './reducers/results';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst reducer = combineReducers({\n  reducerResults\n});\nexport type RootState = ReturnType<typeof reducer>;\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}