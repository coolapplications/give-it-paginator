{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reducerResults from './reducers/results';\nimport thunk from 'redux-thunk';\nconst reducer = combineReducers({\n  reducerResults\n});\nconst store = createStore(reducer, applyMiddleware(thunk));\nexport default store;","map":{"version":3,"sources":["/mnt/c/users/aalvarez/projects/give-it/src/store.ts"],"names":["createStore","combineReducers","applyMiddleware","reducerResults","thunk","reducer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,OAAO,GAAGJ,eAAe,CAAC;AAC9BE,EAAAA;AAD8B,CAAD,CAA/B;AAIA,MAAMG,KAAK,GAAGN,WAAW,CAACK,OAAD,EAAUH,eAAe,CAACE,KAAD,CAAzB,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reducerResults from './reducers/results';\nimport thunk from 'redux-thunk';\n\nconst reducer = combineReducers({\n  reducerResults\n});\nexport type RootState = ReturnType<typeof reducer>;\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}