{"ast":null,"code":"import _slicedToArray from \"/Users/peliculas/empresariales/give-it/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/peliculas/empresariales/give-it/src/components/Product/Product.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useStyles } from './Product.styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { apiSellerOnly } from '../../apiService';\nimport { useDispatch } from 'react-redux';\nexport default function Product(props) {\n  const classes = useStyles();\n\n  const _useState = useState(props.product.id),\n        _useState2 = _slicedToArray(_useState, 2),\n        product = _useState2[0],\n        addItem = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        seller = _useState4[0],\n        setSeller = _useState4[1];\n\n  useEffect(() => {\n    apiSellerOnly(props.product.seller.id).then(res => res.json()).then(res => {\n      if (res.seller) {\n        setSeller(res.seller);\n      }\n    });\n  }, [props.product.seller.id]);\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.product.thumbnail,\n    title: \"Contemplative Reptile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.notOverflow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.product.title), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.product.price), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, seller.nickname), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"large\",\n    color: \"primary\",\n    onKeyPress: event => {\n      dispatch(addItem(product));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Add to my list\")));\n}","map":{"version":3,"sources":["/Users/peliculas/empresariales/give-it/src/components/Product/Product.tsx"],"names":["React","useState","useEffect","useStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","apiSellerOnly","useDispatch","Product","props","classes","product","id","addItem","dispatch","seller","setSeller","then","res","json","card","media","thumbnail","notOverflow","title","price","nickname","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { useStyles } from './Product.styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IProduct from '../../models/ProductModel';\nimport ISeller from '../../models/SellerModel';\nimport { apiSellerOnly } from '../../apiService';\nimport { useDispatch } from 'react-redux';\n\nexport default function Product(props: { product: IProduct }) {\n  const classes = useStyles();\n\n  const [product, addItem] = useState(props.product.id);\n\n  const dispatch = useDispatch();\n\n  const [seller, setSeller] = useState({} as ISeller);\n  useEffect(() => {\n    apiSellerOnly(props.product.seller.id)\n      .then(res => res.json())\n      .then(res => {\n        if (res.seller) {\n          setSeller(res.seller);\n        }\n      });\n  }, [props.product.seller.id]);\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.product.thumbnail}\n          title='Contemplative Reptile'\n        />\n        <CardContent>\n          <Typography className={classes.notOverflow}>\n            {props.product.title}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {props.product.price}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {seller.nickname}\n          </Typography>\n          <Typography\n            variant='body2'\n            color='textSecondary'\n            component='p'\n          ></Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          size='large'\n          color='primary'\n          onKeyPress={event => {\n            dispatch(addItem(product));\n          }}\n        >\n          Add to my list\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}