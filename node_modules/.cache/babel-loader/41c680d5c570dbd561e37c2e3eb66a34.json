{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/aalvarez/projects/give-it/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/aalvarez/projects/give-it/src/components/Product/Product.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useStyles } from \"./Product.styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { apiSellerOnly } from \"../../apiService\";\nimport { Link } from \"react-router-dom\";\nimport { Dialog } from \"material-ui\";\nimport { DialogTitle, DialogContent, useMediaQuery, useTheme } from \"@material-ui/core\";\nexport default function Product(props) {\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const classes = useStyles();\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        seller = _useState2[0],\n        setSeller = _useState2[1];\n\n  useEffect(() => {\n    apiSellerOnly(props.product.seller.id).then(res => res.json()).then(res => {\n      if (res.seller) {\n        setSeller(res.seller);\n      }\n    });\n  }, [props.product.seller.id]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.product.thumbnail,\n    component: Link,\n    to: \"/detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.notOverflow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.product.title), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.product.price), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, seller.nickname), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"large\",\n    color: \"primary\",\n    onClick: event => {\n      props.actionFunction(props.product);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.addOrRemove)), React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Disagree\"), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Agree\"))));\n}","map":{"version":3,"sources":["/mnt/c/Users/aalvarez/projects/give-it/src/components/Product/Product.tsx"],"names":["React","useState","useEffect","useStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","apiSellerOnly","Link","Dialog","DialogTitle","DialogContent","useMediaQuery","useTheme","Product","props","open","setOpen","theme","fullScreen","breakpoints","down","classes","seller","setSeller","product","id","then","res","json","handleClose","card","media","thumbnail","notOverflow","title","price","nickname","event","actionFunction","addOrRemove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useStyles } from \"./Product.styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IProduct from \"../../models/ProductModel\";\nimport ISeller from \"../../models/SellerModel\";\nimport { apiSellerOnly } from \"../../apiService\";\n\nimport { Link } from \"react-router-dom\";\nimport { Dialog } from \"material-ui\";\nimport {\n  DialogTitle,\n  DialogContent,\n  useMediaQuery,\n  useTheme\n} from \"@material-ui/core\";\n\nexport default function Product(props: {\n  product: IProduct;\n  addOrRemove: string;\n  actionFunction: (prod: IProduct) => void;\n}) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const classes = useStyles();\n  const [seller, setSeller] = useState({} as ISeller);\n  useEffect(() => {\n    apiSellerOnly(props.product.seller.id)\n      .then(res => res.json())\n      .then(res => {\n        if (res.seller) {\n          setSeller(res.seller);\n        }\n      });\n  }, [props.product.seller.id]);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.product.thumbnail}\n          component={Link}\n          to=\"/detail\"\n        />\n        <CardContent>\n          <Typography className={classes.notOverflow}>\n            {props.product.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.product.price}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {seller.nickname}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          ></Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          size=\"large\"\n          color=\"primary\"\n          onClick={event => {\n            props.actionFunction(props.product);\n          }}\n        >\n          {props.addOrRemove}\n        </Button>\n      </CardActions>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}