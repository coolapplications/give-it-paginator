{"ast":null,"code":"import _objectSpread from \"/Users/peliculas/empresariales/give-it/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { MyListActionTypes } from '../actions/myListAction';\nimport produce from 'immer';\nconst defaultState = {\n  result: []\n};\nexport function myProductListReducer(state = defaultState, action) {\n  switch (action.type) {\n    case MyListActionTypes.addToMyList:\n      {\n        return produce(state, draft => {\n          if (!draft.result.find(prod => action.payload.id === prod.id)) {\n            draft.result.push(_objectSpread({}, action.payload));\n          }\n        });\n      }\n\n    case MyListActionTypes.removeFromMyList:\n      {\n        return produce(state, draft => {\n          draft.result = draft.result.filter(prod => action.payload.id !== prod.id);\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/peliculas/empresariales/give-it/src/reducers/myProductListReducer.tsx"],"names":["MyListActionTypes","produce","defaultState","result","myProductListReducer","state","action","type","addToMyList","draft","find","prod","payload","id","push","removeFromMyList","filter"],"mappings":";AAAA,SAASA,iBAAT,QAAiD,yBAAjD;AACA,OAAOC,OAAP,MAAoB,OAApB;AAOA,MAAMC,YAAqB,GAAG;AAC5BC,EAAAA,MAAM,EAAE;AADoB,CAA9B;AAIA,OAAO,SAASC,oBAAT,CACLC,KAAc,GAAGH,YADZ,EAELI,MAFK,EAGI;AACT,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,iBAAiB,CAACQ,WAAvB;AAAoC;AAClC,eAAOP,OAAO,CAACI,KAAD,EAAQI,KAAK,IAAI;AAC7B,cAAI,CAACA,KAAK,CAACN,MAAN,CAAaO,IAAb,CAAkBC,IAAI,IAAIL,MAAM,CAACM,OAAP,CAAeC,EAAf,KAAsBF,IAAI,CAACE,EAArD,CAAL,EAA+D;AAC7DJ,YAAAA,KAAK,CAACN,MAAN,CAAaW,IAAb,mBAAuBR,MAAM,CAACM,OAA9B;AACD;AACF,SAJa,CAAd;AAKD;;AAED,SAAKZ,iBAAiB,CAACe,gBAAvB;AAAyC;AACvC,eAAOd,OAAO,CAACI,KAAD,EAAQI,KAAK,IAAI;AAC7BA,UAAAA,KAAK,CAACN,MAAN,GAAeM,KAAK,CAACN,MAAN,CAAaa,MAAb,CACbL,IAAI,IAAIL,MAAM,CAACM,OAAP,CAAeC,EAAf,KAAsBF,IAAI,CAACE,EADtB,CAAf;AAGD,SAJa,CAAd;AAKD;;AAED;AACE,aAAOR,KAAP;AAlBJ;AAoBD","sourcesContent":["import { MyListActionTypes, myListActions } from '../actions/myListAction';\nimport produce from 'immer';\nimport IProduct from '../models/ProductModel';\n\ninterface IMyList {\n  result: IProduct[];\n}\n\nconst defaultState: IMyList = {\n  result: []\n};\n\nexport function myProductListReducer(\n  state: IMyList = defaultState,\n  action: myListActions\n): IMyList {\n  switch (action.type) {\n    case MyListActionTypes.addToMyList: {\n      return produce(state, draft => {\n        if (!draft.result.find(prod => action.payload.id === prod.id)) {\n          draft.result.push({ ...action.payload });\n        }\n      });\n    }\n\n    case MyListActionTypes.removeFromMyList: {\n      return produce(state, draft => {\n        draft.result = draft.result.filter(\n          prod => action.payload.id !== prod.id\n        );\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}